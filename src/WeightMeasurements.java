import org.json.JSONArray;
import org.json.JSONObject;

import java.time.LocalDate;
import java.util.ArrayList;

public class WeightMeasurements
{
   ArrayList<WeightMeasurement> dateWeights = new ArrayList<>();

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   public WeightMeasurements()
   {
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   public WeightMeasurements( JSONObject obj )
   {
      JSONArray a = obj.getJSONArray( "weights" );
      for (int i = 0; i < a.length(); i++)
      {
         var w = new WeightMeasurement( (JSONObject) a.get( i ) );
         dateWeights.add( w );
      }
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   JSONObject toJSON()
   {
      JSONObject obj = new JSONObject();

      JSONArray ja = new JSONArray();
      for (var e : dateWeights)
      {
         ja.put( e.toJSON() );
      }
      obj.put( "weights", ja );

      return obj;
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   public void addMeasurement( LocalDate date, double weight )
   {
      dateWeights.add( new WeightMeasurement( date, weight ) );
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   public int size()
   {
      return dateWeights.size();
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   public void plot()
   {
      for (var dw : dateWeights)
      {
         int n = nweight( dw.getWeight() );
         System.out.format( "%s: %s (%4.1f)\n", dw.getDate().toString(), "*".repeat( n ), dw.getWeight() );
      }
   }

   ////////////////////////////////////////////////////////////////////////////////
   ////////////////////////////////////////////////////////////////////////////////
   private int nweight( double w )
   {
      return (int) w;
   }
}
